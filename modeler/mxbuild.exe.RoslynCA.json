{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "2.2.0.0",
        "fileVersion": "2.2.0.61624",
        "semanticVersion": "2.2.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/jenkins/workspace/AppStudio3.0-Build/modeler/Mendix.MxBuild/BuildException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/jenkins/workspace/AppStudio3.0-Build/modeler/Mendix.MxBuild/BuildException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 12,
                  "endLine": 5,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/jenkins/workspace/AppStudio3.0-Build/modeler/Mendix.MxBuild/BuildException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 12,
                  "endLine": 5,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'BuildException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'BuildException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/jenkins/workspace/AppStudio3.0-Build/modeler/Mendix.MxBuild/HttpServer/HttpListener.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/jenkins/workspace/AppStudio3.0-Build/modeler/Mendix.MxBuild/HttpServer/HttpListener.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/jenkins/workspace/AppStudio3.0-Build/modeler/Mendix.MxBuild/HttpServer/HttpListener.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 21,
                  "endLine": 90,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'HttpListener' or mark the type as 'sealed'.",
              "1": "'HttpListener.Dispose()' should only invoke 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3871",
          "level": "warning",
          "message": "Make this exception 'public'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/jenkins/workspace/AppStudio3.0-Build/modeler/Mendix.MxBuild/Options/OptionConfigurationException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 11,
                  "endLine": 5,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S3871": {
          "id": "S3871",
          "shortDescription": "Exception types should be \"public\"",
          "fullDescription": "The point of having custom exception types is to convey more information than is available in standard types. But custom exception types must be public for that to work. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3871",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "SonarWay",
              "C#"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "SonarWay",
              "C#"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "SonarWay",
              "C#"
            ]
          }
        }
      }
    }
  ]
}